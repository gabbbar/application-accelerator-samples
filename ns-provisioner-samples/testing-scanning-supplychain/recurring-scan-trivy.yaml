#! This file contains a Grype Scan policy which blocks the supply chain if your workload has Critical, High or UnknownSeverity CVEs
#! in your source code or image.
#@ load("@ytt:data", "data")
#@ def in_list(k1, k2, k3):
#@  return hasattr(data.values.tap_values, k1) and (k2 in data.values.tap_values[k1]) and (k3 in data.values.tap_values[k1][k2])
#@ end
#! This if condition ensures that this scan policy is only created if the supply chain is testing_scanning and the TAP profile used is full or build.
#@ if/end in_list('ootb_supply_chain_testing_scanning', 'image_scanner_template_name', 'image-vulnerability-scan-trivy'):
---
apiVersion: app-scanning.apps.tanzu.vmware.com/v1alpha1
kind: RecurringImageVulnerabilityScan
metadata:
  name: trivy-recurring-scan
spec:
  images:
    createdWithinDays: 5
    ranWithinDays: 0
  retentionPolicy:
    maxFailedScans: 1
    maxSuccessfulScans: 1
  schedule:
    cron: "*/30 * * * *"
    startingDeadline: 60m
  scan:
    workspace:
      size: 10Gi
    scanResults:
      location: vipal.azurecr.io/recurring-scan/build/scan-results
    steps:
    - name: update-db
      image: aquasec/trivy:0.48.3
      command: [/usr/local/bin/trivy]
      args:
        - image
        - --download-db-only
        - --no-progress
        - --cache-dir=/workspace/trivy-cache
    - name: update-java-db
      image: aquasec/trivy:0.48.3
      command: [/usr/local/bin/trivy]
      args:
        - image
        - --download-java-db-only
        - --no-progress
        - --cache-dir=/workspace/trivy-cache
    - name: trivy-generate-report
      image: aquasec/trivy:0.48.3
      command: [/usr/local/bin/trivy]
      args:
        - image
        - '{image}'
        - --exit-code=0
        - --no-progress
        - --scanners=vuln
        - --format=cyclonedx
        - --output={output}
        - --cache-dir=/workspace/trivy-cache
        - --skip-db-update
        - --skip-java-db-update